#Worst Case#

from pulp import *

activities = {'Describe Product':12, 'Develop Marketing Strategy':15, 'Design Brochure':8, 'Requirements Analysis':20, 'Software Design':24, 'System Design':20, 'Coding':40, 'Write Documentation':16, 'Unit Testing':20, 'System Testing':24, 'Package Deliverables':10, 'Survey Potential Market':16, 'Develop Pricing Plan':20, 'Develop Implementation Plan':16, 'Write Client Proposal':15 }

activities_list = list(activities.keys())

precedences = {'Describe Product': [], 'Develop Marketing Strategy': [], 'Design Brochure': ['Describe Product'], 'Requirements Analysis': ['Describe Product'], 'Software Design':['Requirements Analysis'], 'System Design': ['Requirements Analysis'], 'Coding': ['Software Design','System Design'], 'Write Documentation': ['Coding'], 'Unit Testing': ['Coding'], 'System Testing': ['Unit Testing'], 'Package Deliverables': ['Write Documentation','System Testing'], 'Survey Potential Market': ['Develop Marketing Strategy','Design Brochure'], 'Develop Pricing Plan': ['Package Deliverables','Survey Potential Market'], 'Develop Implementation Plan': ['Describe Product', 'Package Deliverables'], 'Write Client Proposal': ['Develop Pricing Plan', 'Develop Implementation Plan'] }

prob = LpProblem("Critical Path", LpMinimize)

start_times = {activity: LpVariable(f"start_{activity}", 0, None) for activity in activities_list}
end_times = {activity: LpVariable(f"end_{activity}", 0, None) for activity in activities_list}

for activity in activities_list:
    prob += end_times[activity] == start_times[activity] + activities[activity], f"{activity}_duration"
    for predecessor in precedences[activity]:
        prob += start_times[activity] >= end_times[predecessor], f"{activity}_predecessor_{predecessor}"

prob += lpSum([end_times[activity] for activity in activities_list]), "minimize_end_times"

status = prob.solve()

print("Worst Critical Path Time:")
for activity in activities_list:
    if value(start_times[activity]) == 0:
        print(f"{activity} starts at time 0")
    if value(end_times[activity]) == max([value(end_times[activity]) for activity in activities_list]):
        print(f"{activity} ends at {value(end_times[activity])} days in duration")

print("\nSolution variable values:")
for var in prob.variables():
    if var.name != "_dummy":
        print(var.name, "=", var.varValue)

#Output#

Worst Critical Path Time:
Describe Product starts at time 0
Develop Marketing Strategy starts at time 0
Write Client Proposal ends at 185.0 days in duration

Solution variable values:
end_Coding = 96.0
end_Describe_Product = 12.0
end_Design_Brochure = 20.0
end_Develop_Implementation_Plan = 166.0
end_Develop_Marketing_Strategy = 15.0
end_Develop_Pricing_Plan = 170.0
end_Package_Deliverables = 150.0
end_Requirements_Analysis = 32.0
end_Software_Design = 56.0
end_Survey_Potential_Market = 36.0
end_System_Design = 52.0
end_System_Testing = 140.0
end_Unit_Testing = 116.0
end_Write_Client_Proposal = 185.0
end_Write_Documentation = 112.0
start_Coding = 56.0
start_Describe_Product = 0.0
start_Design_Brochure = 12.0
start_Develop_Implementation_Plan = 150.0
start_Develop_Marketing_Strategy = 0.0
start_Develop_Pricing_Plan = 150.0
start_Package_Deliverables = 140.0
start_Requirements_Analysis = 12.0
start_Software_Design = 32.0
start_Survey_Potential_Market = 20.0
start_System_Design = 32.0
start_System_Testing = 116.0
start_Unit_Testing = 96.0
start_Write_Client_Proposal = 170.0
start_Write_Documentation = 96.0